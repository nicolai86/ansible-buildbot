---
# install buildbot + dependencies
- name: install buildbot dependencies
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - python
    - python-pip
    - python-dev
    - git
    - python-setuptools

- name: install buildbot
  easy_install:
    name: "{{ item }}"
  with_items:
    - buildbot
    - buildbot-slave

# jail configuration
- name: add buildbot user
  user:
    name: "{{ buildbot_user }}"
    home: "{{ buildbot_home }}"
    shell: /bin/bash
    createhome: yes

- name: create buildbot master directory
  file:
    path: "{{ buildbot_home }}/master"
    state: directory
    owner: "{{ buildbot_user }}"
    group: "{{ buildbot_user }}"

- name: create buildbot slave directories
  file:
    path: "{{ buildbot_home }}/slaves/{{ item.name }}"
    state: directory
    owner: "{{ buildbot_user }}"
    group: "{{ buildbot_user }}"
  with_items: "{{ buildbot_slaves }}"

# initialize master + slaves
- name: create buildbot master
  sudo_user: "{{ buildbot_user }}"
  shell: chdir={{ buildbot_home }} buildbot create-master master

- name: buildbot master configuration
  sudo_user: "{{ buildbot_user }}"
  template:
    src: master.cfg.js
    dest: "{{ buildbot_home }}/master/master.cfg"
  when: buildbot_generate_master_cfg

- name: buildbot slave configuration
  sudo_user: "{{ buildbot_user }}"
  shell: chdir={{ buildbot_home }}/slaves/{{ item.name }} buildslave create-slave . {{ buildbot_web_host }}:{{ buildbot_slave_port }} {{ item.name }} {{ item.password }}
  with_items: "{{ buildbot_slaves }}"

- name: set slave admin information
  sudo_user: "{{ buildbot_user }}"
  copy:
    content: "{{ item.info.admin }}"
    dest: "{{ buildbot_home }}/slaves/{{ item.name }}/info/admin"
  with_items: "{{ buildbot_slaves }}"
  when: "item.info is defined and item.info.admin is defined"

- name: set slave host information
  sudo_user: "{{ buildbot_user }}"
  copy:
    content: "{{ item.info.host }}"
    dest: "{{ buildbot_home }}/slaves/{{ item.name }}/info/host"
  with_items: "{{ buildbot_slaves }}"
  when: "item.info is defined and item.info.host is defined"

# master service
- name: buildbot service
  template:
    src: buildbot-master.sh.j2
    dest: /etc/init.d/buildbot-master
    mode: 755

- shell: update-rc.d buildbot-master defaults

- service:
    name: buildbot-master
    state: restarted
